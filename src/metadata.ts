/* eslint-disable */
export default async () => {
    const t = {
        ["./product/entities/product.entity"]: await import("./product/entities/product.entity"),
        ["./store/entities/store.entity"]: await import("./store/entities/store.entity"),
        ["./store/entities/category.entity"]: await import("./store/entities/category.entity"),
        ["./product/entities/color.entity"]: await import("./product/entities/color.entity"),
        ["./product/entities/image.entity"]: await import("./product/entities/image.entity"),
        ["./product/entities/size.entity"]: await import("./product/entities/size.entity"),
        ["./order/entities/order.entity"]: await import("./order/entities/order.entity"),
        ["./order/entities/orderItem.entity"]: await import("./order/entities/orderItem.entity"),
        ["./user/user.entity"]: await import("./user/user.entity")
    };
    return { "@nestjs/swagger": { "models": [[import("./product/entities/image.entity"), { "Image": { id: { required: true, type: () => Number }, product: { required: true, type: () => t["./product/entities/product.entity"].Product }, publicId: { required: true, type: () => String }, url: { required: true, type: () => String }, createdAt: { required: true, type: () => String }, updatedAt: { required: true, type: () => String } } }], [import("./product/entities/color.entity"), { "Color": { id: { required: true, type: () => Number }, product: { required: true, type: () => [t["./product/entities/product.entity"].Product] }, name: { required: true, type: () => String }, value: { required: true, type: () => String }, createdAt: { required: true, type: () => String }, updatedAt: { required: true, type: () => String } } }], [import("./product/entities/size.entity"), { "Size": { id: { required: true, type: () => Number }, storeId: { required: true, type: () => t["./store/entities/store.entity"].Store }, name: { required: true, type: () => String }, value: { required: true, type: () => String }, products: { required: true, type: () => [t["./product/entities/product.entity"].Product] }, createdAt: { required: true, type: () => String }, updatedAt: { required: true, type: () => String } } }], [import("./store/entities/category.entity"), { "Category": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, createdAt: { required: true, type: () => String }, updatedAt: { required: true, type: () => String } } }], [import("./product/entities/product.entity"), { "Product": { id: { required: true, type: () => Number }, storeId: { required: true, type: () => t["./store/entities/store.entity"].Store }, categoryId: { required: true, type: () => t["./store/entities/category.entity"].Category }, name: { required: true, type: () => String }, price: { required: true, type: () => Number }, isFeatured: { required: true, type: () => Boolean }, isArchived: { required: true, type: () => Boolean }, colors: { required: true, type: () => [t["./product/entities/color.entity"].Color] }, images: { required: true, type: () => [t["./product/entities/image.entity"].Image] }, size: { required: true, type: () => [t["./product/entities/size.entity"].Size] }, category: { required: true, type: () => t["./store/entities/category.entity"].Category }, createdAt: { required: true, type: () => String }, updatedAt: { required: true, type: () => String } } }], [import("./order/entities/orderItem.entity"), { "OrderItem": { id: { required: true, type: () => Number }, orderId: { required: true, type: () => t["./order/entities/order.entity"].Order }, productId: { required: true, type: () => t["./product/entities/product.entity"].Product }, createdAt: { required: true, type: () => String }, updatedAt: { required: true, type: () => String } } }], [import("./order/entities/order.entity"), { "Order": { id: { required: true, type: () => Number }, storeId: { required: true, type: () => t["./store/entities/store.entity"].Store }, orderItems: { required: true, type: () => [t["./order/entities/orderItem.entity"].OrderItem] }, isPaid: { required: true, type: () => Boolean }, phone: { required: true, type: () => String }, adress: { required: true, type: () => String }, createdAt: { required: true, type: () => String }, updatedAt: { required: true, type: () => String } } }], [import("./store/entities/store.entity"), { "Store": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, userId: { required: true, type: () => String }, billboards: { required: true, type: () => String }, category: { required: true, type: () => t["./store/entities/category.entity"].Category }, products: { required: true, type: () => [t["./product/entities/product.entity"].Product] }, sizes: { required: true, type: () => [t["./product/entities/size.entity"].Size] }, orders: { required: true, type: () => [t["./order/entities/order.entity"].Order] }, createdAt: { required: true, type: () => String }, updatedAt: { required: true, type: () => String } } }], [import("./user/user.entity"), { "User": { id: { required: true, type: () => Number }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, password: { required: true, type: () => String }, created_at: { required: true, type: () => String }, updated_at: { required: true, type: () => String } } }], [import("./user/dto/update-user.dto"), { "UpdateUserDto": { firstName: { required: true, type: () => String, minLength: 3, maxLength: 64 }, lastName: { required: true, type: () => String, minLength: 3, maxLength: 64 }, password: { required: true, type: () => String, minLength: 8, maxLength: 21 } } }], [import("./auth/dto/sign-in.dto"), { "SignInDto": { email: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./user/dto/create-user.dto"), { "CreateUserDto": { firstName: { required: true, type: () => String, minLength: 3, maxLength: 64 }, lastName: { required: true, type: () => String, minLength: 3, maxLength: 64 }, email: { required: true, type: () => String, maxLength: 64 }, password: { required: true, type: () => String, minLength: 8, maxLength: 21 } } }], [import("./order/dto/create-order.dto"), { "CreateOrderDto": { storeId: { required: true, type: () => Number }, orderItems: { required: true, type: () => [Number] }, isPaid: { required: true, type: () => Boolean }, phone: { required: true, type: () => String }, adress: { required: true, type: () => String } } }], [import("./store/entities/billboard.entity"), { "Billboard": { id: { required: true, type: () => Number }, label: { required: true, type: () => String }, image: { required: true, type: () => t["./product/entities/image.entity"].Image }, category: { required: true, type: () => t["./store/entities/category.entity"].Category }, createdAt: { required: true, type: () => String }, updatedAt: { required: true, type: () => String } } }]], "controllers": [[import("./user/user.controller"), { "UserController": { "findOneById": { type: t["./user/user.entity"].User }, "updateOne": {}, "deleteOne": {} } }], [import("./auth/auth.controller"), { "AuthController": { "signIn": {}, "signUp": { type: t["./user/user.entity"].User }, "revalidateToken": {}, "signOut": {} } }], [import("./health/health.controller"), { "HealthController": { "getSatus": {} } }]] } };
};